/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/hello": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Hello */
        get: operations["read_hello_api_hello_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/messages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Message */
        post: operations["create_message_api_messages__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/services/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Services */
        get: operations["get_services_api_services__get"];
        put?: never;
        /** Create Service */
        post: operations["create_service_api_services__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/services/{service_id}/stats/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Service Stats */
        post: operations["create_service_stats_api_services__service_id__stats__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MessageCreate */
        MessageCreate: {
            /** Content */
            content: string;
        };
        /** MessageResponse */
        MessageResponse: {
            /** Id */
            id: number;
            /** Content */
            content: string;
        };
        /**
         * RefreshFrequency
         * @enum {string}
         */
        RefreshFrequency: "1 minute" | "10 minutes" | "1 hour";
        /** ServiceCreate */
        ServiceCreate: {
            /** Name */
            name: string;
            /**
             * Url
             * Format: uri
             */
            url: string;
            /** @default 1 hour */
            refresh_frequency: components["schemas"]["RefreshFrequency"];
        };
        /** ServiceResponse */
        ServiceResponse: {
            /**
             * Id
             * Format: uuid4
             */
            id: string;
            /** Name */
            name: string;
            /**
             * Url
             * Format: uri
             */
            url: string;
            /**
             * User Id
             * Format: uuid4
             */
            user_id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            refresh_frequency: components["schemas"]["RefreshFrequency"];
            /**
             * Stats
             * @default []
             */
            stats: components["schemas"]["ServiceStatsResponse"][] | null;
        };
        /** ServiceStatsCreate */
        ServiceStatsCreate: {
            /**
             * Service Id
             * Format: uuid4
             */
            service_id: string;
            /** Status */
            status: boolean;
            /** Response Time */
            response_time: number | null;
            /**
             * Ping Date
             * Format: date-time
             * @default 2024-12-04T19:11:28.601169
             */
            ping_date: string;
        };
        /** ServiceStatsResponse */
        ServiceStatsResponse: {
            /** Status */
            status: boolean;
            /** Response Time */
            response_time: number | null;
            /**
             * Ping Date
             * Format: date-time
             */
            ping_date: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    read_hello_api_hello_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    create_message_api_messages__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MessageCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MessageResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_services_api_services__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceResponse"][];
                };
            };
        };
    };
    create_service_api_services__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ServiceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_service_stats_api_services__service_id__stats__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                service_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ServiceStatsCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServiceStatsResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
